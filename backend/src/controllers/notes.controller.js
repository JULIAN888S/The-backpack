const notesCtrl = {};

const Note = require('../models/Note');

notesCtrl.getNotes = async (req, res) => {
    const notes = await Note.find();
    res.json(notes)
}

notesCtrl.createNote = async (req, res) => {
    const { level,title, 
        content, 
        date,
        author,
        skill,
        extension,
        ref,
        reading,
        reading_link,
        ref1,
        listening,
        listening_link,
        ref2,
        writing,
        writing_link,
        ref3,
        speaking,
        speaking_link,
        ref4,
        grammar,
        grammar_link,
        ref5,
        vocabulary,
        vocabulary_link,
        ref6,
        pronunciation,
        pronunciation_link,
        ref7,
        TF_century_skills,
        TF_century_skills_link,
        ref8,
        para_el_aprendizaje,
        para_el_aprendizaje_link,
        ref9,
        del_aprendizaje,
        del_aprendizaje_link,
        ref10,
        examenes_estandarizados,
        examenes_estandarizados_link,} = req.body;
    const newNote = new Note({
        level,title,
skill,
content,
date,
author,
extension,
ref,
reading,
reading_link,
ref1,
listening,
listening_link,
ref2,
writing,
writing_link,
ref3,
speaking,
speaking_link,
ref4,
grammar,
grammar_link,
ref5,
vocabulary,
vocabulary_link,
ref6,
pronunciation,
pronunciation_link,
ref7,
TF_century_skills,
TF_century_skills_link,
ref8,
para_el_aprendizaje,
para_el_aprendizaje_link,
ref9,
del_aprendizaje,
del_aprendizaje_link,
ref10,
examenes_estandarizados,
examenes_estandarizados_link,
    })
    await newNote.save();
    res.json({message: 'note saved'});
};

notesCtrl.getNote = async (req, res) => {
    const note = await Note.findById(req.params.id);
    res.json(note)
}

notesCtrl.updateNote = async (req, res) => {
    const { level,title, 
        content, 
        date,
        author,
        skill,
        extension,
        ref,
        reading,
        reading_link,
        ref1,
        listening,
        listening_link,
        ref2,
        writing,
        writing_link,
        ref3,
        speaking,
        speaking_link,
        ref4,
        grammar,
        grammar_link,
        ref5,
        vocabulary,
        vocabulary_link,
        ref6,
        pronunciation,
        pronunciation_link,
        ref7,
        TF_century_skills,
        TF_century_skills_link,
        ref8,
        para_el_aprendizaje,
        para_el_aprendizaje_link,
        ref9,
        del_aprendizaje,
        del_aprendizaje_link,
        ref10,
        examenes_estandarizados,
        examenes_estandarizados_link,} = req.body;
    await Note.findOneAndUpdate({_id: req.params.id}, {
        level, title,
skill,
content,
date,
author,
extension,
ref,
reading,
reading_link,
ref1,
listening,
listening_link,
ref2,
writing,
writing_link,
ref3,
speaking,
speaking_link,
ref4,
grammar,
grammar_link,
ref5,
vocabulary,
vocabulary_link,
ref6,
pronunciation,
pronunciation_link,
ref7,
TF_century_skills,
TF_century_skills_link,
ref8,
para_el_aprendizaje,
para_el_aprendizaje_link,
ref9,
del_aprendizaje,
del_aprendizaje_link,
ref10,
examenes_estandarizados,
examenes_estandarizados_link,
    });
    res.json({message: 'note updated'})
}

notesCtrl.deleteNote = async (req, res) => {
    await Note.findByIdAndDelete(req.params.id);
    res.json({message: 'note deleted'})
}

module.exports = notesCtrl;  